/** ###################################################################
**     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
**     Filename    : Buzzer.h
**     Project     : ProcessorExpert
**     Processor   : MCF51JM32VLD
**     Component   : PWM
**     Version     : Component 02.233, Driver 01.28, CPU db: 3.00.062
**     Compiler    : CodeWarrior ColdFireV1 C Compiler
**     Date/Time   : 2012-11-27, 16:33, # CodeGen: 7
**     Abstract    :
**         This component implements a pulse-width modulation generator
**         that generates signal with variable duty and fixed cycle. 
**     Settings    :
**         Used output pin             : 
**             ----------------------------------------------------
**                Number (on package)  |    Name
**             ----------------------------------------------------
**                       42            |  PTC2_IRO
**             ----------------------------------------------------
**
**         Timer name                  : CMT_PWM [16-bit]
**         Counter                     : CMTCMD1   [0xFFFF986E]
**         Mode register               : CMTCMD3   [0xFFFF9870]
**         Run register                : CMTCMD2   [0xFFFF986F]
**         Prescaler                   : CMTCMD4   [0xFFFF9871]
**         Compare register            : CMTCMD1   [0xFFFF986E]
**         Flip-flop register          : CMTCMD2   [0xFFFF986F]
**
**         User handling procedure     : not specified
**
**         Port name                   : PTC
**         Bit number (in port)        : 2
**         Bit mask of the port        : 0x0004
**         Port data register          : PTCD      [0xFFFF8004]
**         Port control register       : PTCDD     [0xFFFF8005]
**
**         Initialization:
**              Output level           : low
**              Timer                  : Enabled
**              Event                  : Enabled
**         High speed mode
**             Prescaler               : divide-by-1
**             Clock                   : 524288 Hz
**           Initial value of            period     pulse width
**             Xtal ticks              : 16         0
**             microseconds            : 488        0
**             seconds (real)          : 0.00048828125 0.0
**
**     Contents    :
**         SetRatio16 - byte Buzzer_SetRatio16(word Ratio);
**         SetDutyUS  - byte Buzzer_SetDutyUS(word Time);
**         SetDutyMS  - byte Buzzer_SetDutyMS(word Time);
**
**     Copyright : 1997 - 2011 Freescale Semiconductor, Inc. All Rights Reserved.
**     
**     http      : www.freescale.com
**     mail      : support@freescale.com
** ###################################################################*/

#ifndef __Buzzer
#define __Buzzer

/* MODULE Buzzer. */

/*Include shared modules, which are used for whole project*/
#include "PE_Types.h"
#include "PE_Error.h"
#include "PE_Const.h"
#include "IO_Map.h"
#include "PE_Timer.h"
#include "Cpu.h"

#define Buzzer_PERIOD_VALUE              0x0100U /* Initial period value in ticks of the timer in high speed mode */
#define Buzzer_PERIOD_VALUE_HIGH         0x0100U /* Period value in ticks of the timer in high speed mode */


byte Buzzer_SetRatio16(word Ratio);
/*
** ===================================================================
**     Method      :  Buzzer_SetRatio16 (component PWM)
**
**     Description :
**         This method sets a new duty-cycle ratio. Ratio is expressed
**         as a 16-bit unsigned integer number. 0 - FFFF value is
**         proportional to ratio 0 - 100%. The method is available
**         only if it is not selected list of predefined values in
**         <Starting pulse width> property. 
**         Note: Calculated duty depends on the timer possibilities and
**         on the selected period.
**     Parameters  :
**         NAME            - DESCRIPTION
**         Ratio           - Ratio to set. 0 - 65535 value is
**                           proportional to ratio 0 - 100%
**     Returns     :
**         ---             - Error code, possible codes:
**                           ERR_OK - OK
**                           ERR_SPEED - This device does not work in
**                           the active speed mode
** ===================================================================
*/

byte Buzzer_SetDutyUS(word Time);
/*
** ===================================================================
**     Method      :  Buzzer_SetDutyUS (component PWM)
**
**     Description :
**         This method sets the new duty value of the output signal.
**         The duty is expressed in microseconds as a 16-bit
**         unsigned integer number.
**     Parameters  :
**         NAME            - DESCRIPTION
**         Time            - Duty to set [in microseconds]
**                      (0 to 488 us in high speed mode)
**     Returns     :
**         ---             - Error code, possible codes:
**                           ERR_OK - OK
**                           ERR_SPEED - This device does not work in
**                           the active speed mode
**                           ERR_MATH - Overflow during evaluation
**                           ERR_RANGE - Parameter out of range
** ===================================================================
*/

byte Buzzer_SetDutyMS(word Time);
/*
** ===================================================================
**     Method      :  Buzzer_SetDutyMS (component PWM)
**
**     Description :
**         This method sets the new duty value of the output signal.
**         The duty is expressed in milliseconds as a 16-bit
**         unsigned integer number.
**     Parameters  :
**         NAME            - DESCRIPTION
**         Time            - Duty to set [in milliseconds]
**         Note: The period is too short. The method will return
**               just the error code in high speed mode.
**     Returns     :
**         ---             - Error code, possible codes:
**                           ERR_OK - OK
**                           ERR_SPEED - This device does not work in
**                           the active speed mode
**                           ERR_MATH - Overflow during evaluation
**                           ERR_RANGE - Parameter out of range
** ===================================================================
*/

void Buzzer_Init(void);
/*
** ===================================================================
**     Method      :  Buzzer_Init (component PWM)
**
**     Description :
**         Initializes the associated peripheral(s) and the components 
**         internal variables. The method is called automatically as a 
**         part of the application initialization code.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/


/* END Buzzer. */

#endif /* ifndef __Buzzer */
/*
** ###################################################################
**
**     This file was created by Processor Expert 5.3 [05.01]
**     for the Freescale ColdFireV1 series of microcontrollers.
**
** ###################################################################
*/
